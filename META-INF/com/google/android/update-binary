#!/sbin/sh

####################################################
#
# Magisk 模块配置
#
#####################################################

#此模板由柚稚的孩纸制作
umask 022

# 全局变量
TMPDIR=/dev/tmp
PERSISTDIR=/sbin/.magisk/mirror/persist

rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR

# 在加载 util_functions 前 echo
ui_print() { echo "$1"; }

require_new_magisk() {
  ui_print "*******************************"
  ui_print " 请安装 Magisk v19+! "
  ui_print "*******************************"
  exit 1
}

is_legacy_script() {
  unzip -l "$ZIPFILE" install.sh | grep -q install.sh
  return $?
}

set_permissions() {
    set_perm_recursive $MODPATH 0 0 0755 0644
}

##############
# 环境设置
##############

OUTFD=$2
ZIPFILE=$3

mount /data 2>/dev/null

# 加载公用函数
[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -gt 19000 ] || require_new_magisk

# 准备卡刷 zip 包
setup_flashable

# 挂载分区
mount_partitions

# 检测版本和架构
api_level_arch_detect

# 安装 busybox 和二进制文件
$BOOTMODE && boot_actions || recovery_actions

##############
# 准备
##############

# 提取公共文件
unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=Reducemiui
MODPATH=$MODULEROOT/$MODID
MODNAME="Reduce MIUI Project"

# 创建模块路径
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

##########
# 安装
##########

if is_legacy_script; then
  unzip -o "$ZIPFILE" module.prop install.sh uninstall.sh 'common/*' -d $TMPDIR >&2

  # 加载安装脚本
  . $TMPDIR/install.sh

  # Custom 卸载程序
  [ -f $TMPDIR/uninstall.sh ] && cp -af $TMPDIR/common/uninstall.sh $MODPATH/uninstall.sh

  # 取消挂载
  $SKIPMOUNT && touch $MODPATH/skip_mount

  # prop 文件
  $PROPFILE && cp -af $TMPDIR/common/system.prop $MODPATH/system.prop

  # 模块信息
  cp -af $TMPDIR/module.prop $MODPATH/module.prop

  # post-fs-data 模式脚本
  $POSTFSDATA && cp -af $TMPDIR/common/post-fs-data.sh $MODPATH/post-fs-data.sh

  # service 模式脚本
  $LATESTARTSERVICE && cp -af $TMPDIR/common/service.sh $MODPATH/service.sh

  # 设置权限
  ui_print "- 正在设置权限，这需要一点时间，请坐和放宽"
  ui_print "- 不要着急，在干活啦"
  set_permissions
else
  print_modname

  unzip -o "$ZIPFILE" customize.sh -d $MODPATH >&2

  if ! grep -q '^SKIPUNZIP=1$' $MODPATH/customize.sh 2>/dev/null; then
    ui_print "- 正在提取模块文件"
    unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2

  # 默认权限
  # 只有一些特殊文件需要特定的权限
  # 默认的权限应该适用于大多数情况

  # 下面是 set_perm 函数的一些示例:

  # set_perm_recursive  <目录>                <所有者> <用户组> <目录权限> <文件权限> <上下文> (默认值是: u:object_r:system_file:s0)
  # set_perm_recursive  $MODPATH/system/lib       0       0       0755        0644

  # set_perm  <文件名>                         <所有者> <用户组> <文件权限> <上下文> (默认值是: u:object_r:system_file:s0)
  # set_perm  $MODPATH/system/bin/app_process32   0       2000      0755       u:object_r:zygote_exec:s0
  # set_perm  $MODPATH/system/bin/dex2oat         0       2000      0755       u:object_r:dex2oat_exec:s0
  # set_perm  $MODPATH/system/lib/libart.so       0       0         0644

  # 以下是默认权限，请勿删除
    set_perm_recursive $MODPATH 0 0 0755 0644
  fi

  # 加载 customization 脚本
  [ -f $MODPATH/customize.sh ] && . $MODPATH/customize.sh
fi

# 处理 replace 文件夹
for TARGET in $REPLACE; do
  mktouch $MODPATH$TARGET/.replace
done

if $BOOTMODE; then
  # Update info for Magisk Manager
  mktouch $NVBASE/modules/$MODID/update
  cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
fi

# 复制 Custom sepolicy 规则
if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
  ui_print "- 安装 Custom sepolicy 补丁"
  PERSISTMOD=$PERSISTDIR/magisk/$MODID
  mkdir -p $PERSISTMOD
  cp -af $MODPATH/sepolicy.rule $PERSISTMOD/sepolicy.rule
fi

# 删除 placeholder
rm -rf \
$MODPATH/system/placeholder $MODPATH/customize.sh \
$MODPATH/README.md $MODPATH/.git* 2>/dev/null

##############
# 结束
##############

cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR

ui_print "- 完事了！"
ui_print "- 请重启手机以生效"
exit 0